@page "/websites"
@using IIGO.Data
@using IIGO.Services
@using Microsoft.AspNetCore.Identity
@using Microsoft.Web.Administration
@inject IHttpContextAccessor httpContextAccessor
@inject IISService IISService
@attribute [Authorize]
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Websites</PageTitle>

<h1>Websites</h1>

@if (sites == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <a href="/websites/new" class="btn btn-primary">Add Website</a>

    if (LastMessage != null)
    {
        <div class="alert alert-@(Success ? "success" : "danger") alert-dismissable mt-4">
            @LastMessage
            @* <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button> *@
        </div>
    }

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Status</th>
                <th>Binding</th>
                <th>Path</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var site in sites)
            {
                <tr>
                    <td>@site.Id</td>
                    <td><a href="/websites/@site.Id">@site.Name</a></td>
                    <td>@site.State</td>
                    <td style="max-width:200px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden">@String.Join(";", site.Bindings.Select(x => x.BindingInformation))</td>
                    <td style="max-width:200px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden">@site.Applications[0].VirtualDirectories[0].PhysicalPath</td>
                    <td>
                        @if (httpContextAccessor.HttpContext!.User.IsInRole("Administrator"))
                        {
                            <button @onclick="@(e => RestartSite(site.Id))" class="btn btn-primary">Restart</button><text>&nbsp;</text>
                            @if (site.State == ObjectState.Stopped)
                            {
                                <button @onclick="@(e => StartSite(site.Id))" class="btn btn-success">Start</button>
                            }
                            else if (site.State == ObjectState.Started)
                            {
                                <button @onclick="@(e => StopSite(site.Id))" class="btn btn-danger">Stop</button>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code{
    List<Site>? sites;
    private string? LastMessage = null;
    private bool Success = true;

    protected override void OnInitialized()
    {
        try
        {
            sites = IISService.GetSites();
        }
        catch { }
    }

    protected void RestartSite(long siteId)
    {
        try
        {
            var site = IISService.GetSite(siteId);
            LastMessage = $"{site?.Name} restarted!";
        }
        catch {}
        IISService.RestartSite(siteId);
    }

    protected void StartSite(long siteId)
    {
        try
        {
            var site = IISService.GetSite(siteId);
            LastMessage = $"{site?.Name} started!";
        }
        catch { }
        IISService.StartSite(siteId);
    }

    protected void StopSite(long siteId)
    {
        try
        {
            var site = IISService.GetSite(siteId);
            LastMessage = $"{site?.Name} stopped!";
        }
        catch { }
        IISService.StopSite(siteId);
    }
}