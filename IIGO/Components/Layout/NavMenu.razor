@implements IDisposable

@inject NavigationManager NavigationManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">IIGO</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">

        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/websites">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> Websites
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/apppools">
                        <span class="oi oi-list-rich" aria-hidden="true"></span> App Pools
                    </NavLink>
                </div>
                @if (context.User.IsInRole("Administrator"))
                {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/checkupdates">
                        <span class="oi oi-list-rich" aria-hidden="true"></span>Check updates
                    </NavLink>
                </div>
                }
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/processes">
                        <span class="oi oi-list-rich" aria-hidden="true"></span>Processes
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/status">
                        <span class="oi oi-list-rich" aria-hidden="true"></span>Status
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/firewall">
                        <span class="oi oi-list-rich" aria-hidden="true"></span>Firewall
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/tasks">
                        <span class="oi oi-list-rich" aria-hidden="true"></span>Task Scheduler
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/services">
                        <span class="oi oi-list-rich" aria-hidden="true"></span>Services
                    </NavLink>
                </div>
                @if (context.User.IsInRole("Administrator"))
                {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/license">
                        <span class="oi oi-list-rich" aria-hidden="true"></span>License Status
                    </NavLink>
                </div>
                }
                @if (context.User.IsInRole("Administrator"))
                {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/users">
                        <span class="oi oi-list-rich" aria-hidden="true"></span>Users
                    </NavLink>
                </div>
                }
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Manage">
                        <span class="bi bi-person-fill-nav-menu" aria-hidden="true"></span> @context.User.Identity?.Name
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="nav-link">
                            <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                        </button>
                    </form>
                </div>
            </Authorized>
            <NotAuthorized>
                @* <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Register">
                        <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                    </NavLink>
                </div> *@
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Account/Login">
                        <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>

        @* <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="weather">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Weather
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="auth">
                <span class="bi bi-lock-nav-menu" aria-hidden="true"></span> Auth Required
            </NavLink>
        </div> *@
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

